<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bio.mapper.BioCommentMapper">
    <resultMap id="CommentMap" type="com.example.bio.model.BioComment">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="comment_body" property="commentBody"/>
        <result column="comment_status" property="commentStatus"/>
        <result column="reply_user_id" property="replyUserId"/>
        <result column="parent_id" property="parentId"/>
        <result column="is_deleted" property="delFlag"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <collection
                property="childComment"
                javaType="java.util.List"
                ofType="com.example.bio.model.BioComment"
                select="selectChildren" column="id"
        >
        </collection>
    </resultMap>
    <select id="selectChildren" resultMap="CommentMap">
        select id,
               bio_id,
               user_id,
               comment_body,
               comment_status,
               parent_id,
               is_deleted,
               gmt_create,
               gmt_modified
        from biography.bio_comment
        where parent_id = #{pid}
          and is_deleted = 0
          and comment_status = 1
    </select>

    <select id="getCommentsByBioId" resultType="com.example.bio.model.BioComment" resultMap="CommentMap">
        select c1.id,
               c1.bio_id,
               c1.user_id,
               c1.comment_body,
               c1.comment_status,
               c1.parent_id,
               c1.is_deleted,
               c1.gmt_create,
               c1.gmt_modified,
               b.id,
               b.enable_comment,
               b.is_deleted,
               b.status,
               b.privacy_level
        from biography.bio_comment c1,
             biography.biography b
        where c1.bio_id = #{bioId}
          and c1.comment_status = 1
          and c1.is_deleted = 0
          and c1.parent_id is null
          and c1.bio_id = b.id
          and b.enable_comment = 0
          and b.is_deleted = 0
          and b.status = 1
          and b.privacy_level = 0
    </select>

    <update id="deleteCommentById">
        update biography.bio_comment
        set is_deleted=1
        where id = #{id}
          and user_id = #{userId};
                update biography.bio_comment
                set is_deleted=1
                where parent_id = #{id}
    </update>

    <update id="bioOwnerDeleteCommentById">
        update biography.bio_comment
        set is_deleted=1
        where bio_id = (select biography.id
                        from biography.biography
                        where owner_id = #{userId})
          and id = #{id};
                update biography.bio_comment
                set is_deleted=1
                where parent_id = #{id}
    </update>
</mapper>
